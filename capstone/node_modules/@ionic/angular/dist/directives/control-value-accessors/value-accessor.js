import * as tslib_1 from "tslib";
import { HostListener } from '@angular/core';
var ValueAccessor = /** @class */ (function () {
    function ValueAccessor(el) {
        this.el = el;
        this.onChange = function () { };
        this.onTouched = function () { };
    }
    ValueAccessor.prototype.writeValue = function (value) {
        this.el.nativeElement.value = this.lastValue = value == null ? '' : value;
        setIonicClasses(this.el);
    };
    ValueAccessor.prototype.handleChangeEvent = function (value) {
        if (value !== this.lastValue) {
            this.lastValue = value;
            this.onChange(value);
        }
        setIonicClasses(this.el);
    };
    ValueAccessor.prototype._handleBlurEvent = function () {
        this.onTouched();
        setIonicClasses(this.el);
    };
    ValueAccessor.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    ValueAccessor.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    ValueAccessor.prototype.setDisabledState = function (isDisabled) {
        this.el.nativeElement.disabled = isDisabled;
    };
    tslib_1.__decorate([
        HostListener('ionBlur'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], ValueAccessor.prototype, "_handleBlurEvent", null);
    return ValueAccessor;
}());
export { ValueAccessor };
export function setIonicClasses(element) {
    requestAnimationFrame(function () {
        var classList = element.nativeElement.classList;
        classList.remove('ion-valid', 'ion-invalid', 'ion-touched', 'ion-untouched', 'ion-dirty', 'ion-pristine');
        for (var i = 0; i < classList.length; i++) {
            var item = classList.item(i);
            if (item !== null && startsWith(item, 'ng-')) {
                classList.add("ion-" + item.substr(3));
            }
        }
    });
}
function startsWith(input, search) {
    return input.substr(0, search.length) === search;
}
