:host {
  /**
   * @prop --bar-background: Background of the range bar
   * @prop --bar-background-active: Background of the active range bar
   * @prop --bar-height: Height of the range bar
   * @prop --bar-border-radius: Border radius of the range bar
   * @prop --height: Height of the range
   * @prop --knob-background: Background of the range knob
   * @prop --knob-border-radius: Border radius of the range knob
   * @prop --knob-box-shadow: Box shadow of the range knob
   * @prop --knob-size: Size of the range knob
   */
  --knob-handle-size: calc(var(--knob-size) * 2);
  display: flex;
  position: relative;
  flex: 3;
  align-items: center;
  font-family: var(--ion-font-family, inherit);
  user-select: none;
  z-index: 2; }

:host(.range-disabled) {
  pointer-events: none; }

::slotted(ion-label) {
  flex: initial; }

::slotted(ion-icon[slot]) {
  font-size: 24px; }

.range-slider {
  position: relative;
  flex: 1;
  width: 100%;
  height: var(--height);
  contain: size layout style;
  cursor: grab;
  touch-action: pan-y; }

:host(.range-pressed) .range-slider {
  cursor: grabbing; }

.range-pin {
  position: absolute;
  background: var(--ion-color-base);
  color: var(--ion-color-contrast);
  text-align: center;
  box-sizing: border-box; }

.range-knob-handle {
  left: 0;
  top: calc((var(--height) - var(--knob-handle-size)) / 2);
  margin-left: calc(0px - var(--knob-handle-size) / 2);
  position: absolute;
  width: var(--knob-handle-size);
  height: var(--knob-handle-size);
  text-align: center; }
  .range-knob-handle:active, .range-knob-handle:focus {
    outline: none; }

.range-bar {
  border-radius: var(--bar-border-radius);
  left: 0;
  top: calc((var(--height) - var(--bar-height)) / 2);
  position: absolute;
  width: 100%;
  height: var(--bar-height);
  background: var(--bar-background);
  pointer-events: none; }

.range-knob {
  border-radius: var(--knob-border-radius);
  left: calc(50% - var(--knob-size) / 2);
  top: calc(50% - var(--knob-size) / 2);
  position: absolute;
  width: var(--knob-size);
  height: var(--knob-size);
  background: var(--knob-background);
  box-shadow: var(--knob-box-shadow);
  z-index: 2;
  pointer-events: none; }

:host(.range-pressed) .range-bar-active {
  will-change: left, right; }

:host(.range-pressed) .range-knob-handle {
  will-change: left; }

:host(.in-item) {
  width: 100%; }

:host(.in-item) ::slotted(ion-label) {
  align-self: center; }

:host {
  --knob-border-radius: 50%;
  --knob-background: var(--bar-background-active);
  --knob-box-shadow: none;
  --knob-size: 18px;
  --bar-height: 2px;
  --bar-background: rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.26);
  --bar-background-active: var(--ion-color-primary, #3880ff);
  --bar-border-radius: 0;
  --height: 42px;
  --pin-background: var(--ion-color-primary, #3880ff);
  --pin-color: var(--ion-color-primary-contrast, #fff);
  padding: 8px 14px;
  font-size: 12px; }

:host(.ion-color) .range-bar {
  background: rgba(var(--ion-color-base-rgb), 0.26); }

:host(.ion-color) .range-bar-active,
:host(.ion-color) .range-knob,
:host(.ion-color) .range-pin,
:host(.ion-color) .range-pin::before,
:host(.ion-color) .range-tick {
  background: var(--ion-color-base);
  color: var(--ion-color-contrast); }

::slotted([slot="start"]) {
  margin: 0 14px 0 0; }

::slotted([slot="end"]) {
  margin: 0 0 0 14px; }

:host(.range-has-pin) {
  padding-top: 28px; }

.range-bar-active {
  bottom: 0;
  width: auto;
  background: var(--bar-background-active); }

.range-knob {
  transform: scale(0.67);
  transition-duration: 120ms;
  transition-property: transform, background-color, border;
  transition-timing-function: ease;
  z-index: 2; }

.range-tick {
  position: absolute;
  top: calc((var(--height) - var(--bar-height)) / 2);
  width: var(--bar-height);
  height: var(--bar-height);
  background: var(--bar-background-active);
  z-index: 1;
  pointer-events: none; }

.range-tick-active {
  background: transparent; }

.range-pin {
  padding: 8px 0;
  border-radius: 50%;
  transform: translate3d(0,  0,  0) scale(0.01);
  display: inline-block;
  position: relative;
  min-width: 28px;
  height: 28px;
  transition: transform 120ms ease, background 120ms ease;
  background: var(--pin-background);
  color: var(--pin-color);
  text-align: center; }
  .range-pin::before {
    left: 50%;
    top: 3px;
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    border-bottom-right-radius: 50%;
    border-bottom-left-radius: 0;
    margin-left: -13px;
    position: absolute;
    width: 26px;
    height: 26px;
    transform: rotate(-45deg);
    transition: background 120ms ease;
    background: var(--pin-background);
    content: "";
    z-index: -1; }

.range-knob-pressed .range-pin {
  transform: translate3d(0,  -24px,  0) scale(1); }

:host(:not(.range-has-pin)) .range-knob-pressed .range-knob {
  transform: scale(1); }

:host(.range-disabled) .range-bar-active,
:host(.range-disabled) .range-bar,
:host(.range-disabled) .range-tick {
  background-color: var(--ion-color-step-250, #bfbfbf); }

:host(.range-disabled) .range-knob {
  transform: scale(0.55);
  outline: 5px solid #fff;
  background-color: var(--ion-color-step-250, #bfbfbf); }
