{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ios.transition-96fe915f.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAe;AAC7C,yCAAyC,gEAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS,kBAAkB,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU,kBAAkB,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gEAAe;AAChE,gDAAgD,gEAAe;AAC/D,iDAAiD,gEAAe;AAChE;AACA;AACA,mCAAmC,eAAe;AAClD,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gEAAe;AACnD;AACA;AACA,kCAAkC,gEAAe;AACjD;AACA,2CAA2C,gEAAe;AAC1D;AACA,yCAAyC,gEAAe;AACxD;AACA,sCAAsC,gEAAe;AACrD;AACA,uCAAuC,gEAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS,kBAAkB,OAAO;AAClG,uEAAuE,SAAS,kBAAkB,OAAO;AACzG;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU,kBAAkB,OAAO;AACnG,uEAAuE,UAAU,kBAAkB,OAAO;AAC1G;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD,qBAAqB,2BAA2B;AAChD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gDAAgD,gEAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,gEAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA,uDAAuD,OAAO,kBAAkB,SAAS;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gEAAe;AACnE,mDAAmD,gEAAe;AAClE,oDAAoD,gEAAe;AACnE;AACA;AACA,uCAAuC,eAAe;AACtD,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAe;AACtD;AACA,qCAAqC,gEAAe;AACpD;AACA,8CAA8C,gEAAe;AAC7D;AACA,4CAA4C,gEAAe;AAC3D;AACA;AACA;AACA;AACA,yCAAyC,gEAAe;AACxD;AACA,0CAA0C,gEAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,OAAO;AAC1E,0EAA0E,OAAO;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gEAAe;AAClE;AACA,6EAA6E,OAAO,kBAAkB,4BAA4B;AAClI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO,kBAAkB,SAAS;AAC7F;AACA;AACA,2DAA2D,OAAO,kBAAkB,SAAS;AAC7F;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0C","file":"ios-transition-96fe915f-js-es2015.js","sourcesContent":["import { c as createAnimation } from './animation-d0becaea.js';\n\nconst shadow = (el) => {\r\n    return el.shadowRoot || el;\r\n};\r\nconst iosTransitionAnimation = (navEl, opts) => {\r\n    try {\r\n        const DURATION = 540;\r\n        const EASING = 'cubic-bezier(0.32,0.72,0,1)';\r\n        const OPACITY = 'opacity';\r\n        const TRANSFORM = 'transform';\r\n        const CENTER = '0%';\r\n        const OFF_OPACITY = 0.8;\r\n        const isRTL = navEl.ownerDocument.dir === 'rtl';\r\n        const OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\r\n        const OFF_LEFT = isRTL ? '33%' : '-33%';\r\n        const enteringEl = opts.enteringEl;\r\n        const leavingEl = opts.leavingEl;\r\n        const backDirection = (opts.direction === 'back');\r\n        const contentEl = enteringEl.querySelector(':scope > ion-content');\r\n        const headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\r\n        const enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\r\n        const rootAnimation = createAnimation();\r\n        const enteringContentAnimation = createAnimation();\r\n        rootAnimation\r\n            .addElement(enteringEl)\r\n            .duration(opts.duration || DURATION)\r\n            .easing(opts.easing || EASING)\r\n            .fill('both')\r\n            .beforeRemoveClass('ion-page-invisible');\r\n        if (leavingEl && navEl) {\r\n            const navDecorAnimation = createAnimation();\r\n            navDecorAnimation.addElement(navEl);\r\n            rootAnimation.addAnimation(navDecorAnimation);\r\n        }\r\n        if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\r\n            enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs'));\r\n        }\r\n        else {\r\n            enteringContentAnimation.addElement(contentEl);\r\n            enteringContentAnimation.addElement(headerEls);\r\n        }\r\n        rootAnimation.addAnimation(enteringContentAnimation);\r\n        if (backDirection) {\r\n            enteringContentAnimation\r\n                .beforeClearStyles([OPACITY])\r\n                .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\r\n                .fromTo(OPACITY, OFF_OPACITY, 1);\r\n        }\r\n        else {\r\n            // entering content, forward direction\r\n            enteringContentAnimation\r\n                .beforeClearStyles([OPACITY])\r\n                .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\r\n        }\r\n        if (contentEl) {\r\n            const enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\r\n            if (enteringTransitionEffectEl) {\r\n                const enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\r\n                const enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\r\n                const enteringTransitionEffect = createAnimation();\r\n                const enteringTransitionCover = createAnimation();\r\n                const enteringTransitionShadow = createAnimation();\r\n                enteringTransitionEffect\r\n                    .addElement(enteringTransitionEffectEl)\r\n                    .beforeStyles({ opacity: '1' })\r\n                    .afterStyles({ opacity: '' });\r\n                enteringTransitionCover\r\n                    .addElement(enteringTransitionCoverEl)\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo(OPACITY, 0, 0.1);\r\n                enteringTransitionShadow\r\n                    .addElement(enteringTransitionShadowEl)\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo(OPACITY, 0.03, 0.70);\r\n                enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\r\n                enteringContentAnimation.addAnimation([enteringTransitionEffect]);\r\n            }\r\n        }\r\n        enteringToolBarEls.forEach(enteringToolBarEl => {\r\n            const enteringToolBar = createAnimation();\r\n            enteringToolBar.addElement(enteringToolBarEl);\r\n            rootAnimation.addAnimation(enteringToolBar);\r\n            const enteringTitle = createAnimation();\r\n            enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title'));\r\n            const enteringToolBarButtons = createAnimation();\r\n            enteringToolBarButtons.addElement(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\r\n            const enteringToolBarItems = createAnimation();\r\n            enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\r\n            const enteringToolBarBg = createAnimation();\r\n            enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background'));\r\n            const enteringBackButton = createAnimation();\r\n            const backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\r\n            if (backButtonEl) {\r\n                enteringBackButton.addElement(backButtonEl);\r\n            }\r\n            enteringToolBar.addAnimation([enteringTitle, enteringToolBarButtons, enteringToolBarItems, enteringToolBarBg, enteringBackButton]);\r\n            enteringTitle.fromTo(OPACITY, 0.01, 1);\r\n            enteringToolBarButtons.fromTo(OPACITY, 0.01, 1);\r\n            enteringToolBarItems.fromTo(OPACITY, 0.01, 1);\r\n            if (backDirection) {\r\n                enteringTitle.fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`);\r\n                enteringToolBarItems.fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`);\r\n                // back direction, entering page has a back button\r\n                enteringBackButton.fromTo(OPACITY, 0.01, 1);\r\n            }\r\n            else {\r\n                // entering toolbar, forward direction\r\n                enteringTitle.fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\r\n                enteringToolBarItems.fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\r\n                enteringToolBarBg\r\n                    .beforeClearStyles([OPACITY])\r\n                    .keyframes([\r\n                    { offset: 0, opacity: 0.01 },\r\n                    { offset: 0.99, opacity: 1 },\r\n                    { offset: 1, opacity: 'var(--opacity)' }\r\n                    // TODO: Find a way to support clearing properties from Web Animations\r\n                ]);\r\n                // forward direction, entering page has a back button\r\n                enteringBackButton.fromTo(OPACITY, 0.01, 1);\r\n                if (backButtonEl) {\r\n                    const enteringBackBtnText = createAnimation();\r\n                    enteringBackBtnText\r\n                        .addElement(shadow(backButtonEl).querySelector('.button-text'))\r\n                        .fromTo(`transform`, (isRTL ? 'translateX(-100px)' : 'translateX(100px)'), 'translateX(0px)');\r\n                    enteringToolBar.addAnimation(enteringBackBtnText);\r\n                }\r\n            }\r\n        });\r\n        // setup leaving view\r\n        if (leavingEl) {\r\n            const leavingContent = createAnimation();\r\n            const leavingContentEl = leavingEl.querySelector(':scope > ion-content');\r\n            leavingContent.addElement(leavingContentEl);\r\n            leavingContent.addElement(leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *'));\r\n            rootAnimation.addAnimation(leavingContent);\r\n            if (backDirection) {\r\n                // leaving content, back direction\r\n                leavingContent\r\n                    .beforeClearStyles([OPACITY])\r\n                    .fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n            }\r\n            else {\r\n                // leaving content, forward direction\r\n                leavingContent\r\n                    .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                    .fromTo(OPACITY, 1, OFF_OPACITY);\r\n            }\r\n            if (leavingContentEl) {\r\n                const leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\r\n                if (leavingTransitionEffectEl) {\r\n                    const leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\r\n                    const leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\r\n                    const leavingTransitionEffect = createAnimation();\r\n                    const leavingTransitionCover = createAnimation();\r\n                    const leavingTransitionShadow = createAnimation();\r\n                    leavingTransitionEffect\r\n                        .addElement(leavingTransitionEffectEl)\r\n                        .beforeStyles({ opacity: '1' })\r\n                        .afterStyles({ opacity: '' });\r\n                    leavingTransitionCover\r\n                        .addElement(leavingTransitionCoverEl)\r\n                        .beforeClearStyles([OPACITY])\r\n                        .fromTo(OPACITY, 0.1, 0);\r\n                    leavingTransitionShadow\r\n                        .addElement(leavingTransitionShadowEl)\r\n                        .beforeClearStyles([OPACITY])\r\n                        .fromTo(OPACITY, 0.70, 0.03);\r\n                    leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\r\n                    leavingContent.addAnimation([leavingTransitionEffect]);\r\n                }\r\n            }\r\n            const leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\r\n            leavingToolBarEls.forEach(leavingToolBarEl => {\r\n                const leavingToolBar = createAnimation();\r\n                leavingToolBar.addElement(leavingToolBarEl);\r\n                const leavingTitle = createAnimation();\r\n                leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title'));\r\n                const leavingToolBarButtons = createAnimation();\r\n                leavingToolBarButtons.addElement(leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\r\n                const leavingToolBarItems = createAnimation();\r\n                const leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\r\n                if (leavingToolBarItemEls.length > 0) {\r\n                    leavingToolBarItems.addElement(leavingToolBarItemEls);\r\n                }\r\n                const leavingToolBarBg = createAnimation();\r\n                leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background'));\r\n                const leavingBackButton = createAnimation();\r\n                const backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\r\n                if (backButtonEl) {\r\n                    leavingBackButton.addElement(backButtonEl);\r\n                }\r\n                leavingToolBar.addAnimation([leavingTitle, leavingToolBarButtons, leavingToolBarItems, leavingBackButton, leavingToolBarBg]);\r\n                rootAnimation.addAnimation(leavingToolBar);\r\n                // fade out leaving toolbar items\r\n                leavingBackButton.fromTo(OPACITY, 0.99, 0);\r\n                leavingTitle.fromTo(OPACITY, 0.99, 0);\r\n                leavingToolBarButtons.fromTo(OPACITY, 0.99, 0);\r\n                leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\r\n                if (backDirection) {\r\n                    // leaving toolbar, back direction\r\n                    leavingTitle.fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n                    leavingToolBarItems.fromTo('transform', `translateX(${CENTER})`, (isRTL ? 'translateX(-100%)' : 'translateX(100%)'));\r\n                    // leaving toolbar, back direction, and there's no entering toolbar\r\n                    // should just slide out, no fading out\r\n                    leavingToolBarBg\r\n                        .beforeClearStyles([OPACITY])\r\n                        .fromTo(OPACITY, 1, 0.01);\r\n                    if (backButtonEl) {\r\n                        const leavingBackBtnText = createAnimation();\r\n                        leavingBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text'));\r\n                        leavingBackBtnText.fromTo('transform', `translateX(${CENTER})`, `translateX(${(isRTL ? -124 : 124) + 'px'})`);\r\n                        leavingToolBar.addAnimation(leavingBackBtnText);\r\n                    }\r\n                }\r\n                else {\r\n                    // leaving toolbar, forward direction\r\n                    leavingTitle\r\n                        .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                        .afterClearStyles([TRANSFORM]);\r\n                    leavingToolBarItems\r\n                        .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\r\n                        .afterClearStyles([TRANSFORM, OPACITY]);\r\n                    leavingBackButton.afterClearStyles([OPACITY]);\r\n                    leavingTitle.afterClearStyles([OPACITY]);\r\n                    leavingToolBarButtons.afterClearStyles([OPACITY]);\r\n                }\r\n            });\r\n        }\r\n        return rootAnimation;\r\n    }\r\n    catch (err) {\r\n        throw err;\r\n    }\r\n};\n\nexport { iosTransitionAnimation, shadow };\n"],"sourceRoot":""}